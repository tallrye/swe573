{"ast":null,"code":"import _classCallCheck from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tallrye/React/swe573/wlearn-react/src/app/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport Glossary from '../glossary/Glossary';\nimport CreateTopic from '../topic/CreateTopic';\nimport Login from '../user/Login';\nimport Signup from '../user/Signup';\nimport Home from '../common/Home';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport PrivateRoute from '../common/PrivateRoute';\nimport toast from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport UserCreatedTopicList from \"../topic/UserCreatedTopicList\";\nimport UserEnrolledTopicList from \"../topic/UserEnrolledTopicList\";\nimport UserProfile from \"../user/UserProfile\";\nimport Topic from \"../topic/Topic\";\nimport AddContent from \"../learningpath/AddContent\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: true\n    };\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCurrentUser = _this.loadCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadCurrentUser\",\n    value: function loadCurrentUser() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCurrentUser();\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      localStorage.removeItem(ACCESS_TOKEN);\n      this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });\n      this.props.history.push(\"/\");\n      toast.notify(\"You're successfully logged out.\", {\n        position: \"bottom-right\"\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      toast.notify(\"You're successfully logged in.\", {\n        position: \"bottom-right\"\n      });\n      this.loadCurrentUser();\n      this.props.history.push(\"/glossary\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"isLoading!...\");\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(AppHeader, {\n          isAuthenticated: this.state.isAuthenticated,\n          currentUser: this.state.currentUser,\n          onLogout: this.handleLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/glossary\",\n          component: Glossary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/login\",\n          render: function render(props) {\n            return React.createElement(Login, Object.assign({\n              onLogin: _this3.handleLogin\n            }, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/signup\",\n          component: Signup,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          exact: true,\n          path: \"/:username\",\n          authenticated: this.state.isAuthenticated,\n          currentUser: this.state.currentUser,\n          component: UserProfile,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          path: \"/:username/topics/created\",\n          authenticated: this.state.isAuthenticated,\n          currentUser: this.state.currentUser,\n          component: UserCreatedTopicList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          path: \"/:username/topics/enrolled\",\n          authenticated: this.state.isAuthenticated,\n          currentUser: this.state.currentUser,\n          component: UserEnrolledTopicList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          authenticated: this.state.isAuthenticated,\n          path: \"/topic/new\",\n          currentUser: this.state.currentUser,\n          component: CreateTopic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          authenticated: this.state.isAuthenticated,\n          path: \"/topic/:topicId/content\",\n          component: AddContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(PrivateRoute, {\n          authenticated: this.state.isAuthenticated,\n          path: \"/topic/:topicId\",\n          component: Topic,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), React.createElement(Route, {\n          component: NotFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/tallrye/React/swe573/wlearn-react/src/app/App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Glossary","CreateTopic","Login","Signup","Home","AppHeader","NotFound","PrivateRoute","toast","UserCreatedTopicList","UserEnrolledTopicList","UserProfile","Topic","AddContent","App","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","setState","then","response","catch","error","localStorage","removeItem","history","push","notify","position"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,QAA0C,kBAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,8BAAP;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,eAAe,EAAE,KAFR;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB;AATe;AAUlB;;;;sCAEiB;AAAA;;AACd,WAAKG,QAAL,CAAc;AACVL,QAAAA,SAAS,EAAE;AADD,OAAd;AAIArB,MAAAA,cAAc,GACT2B,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,QAAA,MAAI,CAACF,QAAL,CAAc;AACVP,UAAAA,WAAW,EAAES,QADH;AAEVR,UAAAA,eAAe,EAAE,IAFP;AAGVC,UAAAA,SAAS,EAAE;AAHD,SAAd;AAKH,OAPL,EAOOQ,KAPP,CAOa,UAAAC,KAAK,EAAI;AACd,QAAA,MAAI,CAACJ,QAAL,CAAc;AACVL,UAAAA,SAAS,EAAE;AADD,SAAd;AAGH,OAXL;AAYH;;;wCAEmB;AAChB,WAAKG,eAAL;AACH;;;mCAEc;AACXO,MAAAA,YAAY,CAACC,UAAb,CAAwB/B,YAAxB;AAEA,WAAKyB,QAAL,CAAc;AACVP,QAAAA,WAAW,EAAE,IADH;AAEVC,QAAAA,eAAe,EAAE;AAFP,OAAd;AAKA,WAAKH,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAEAxB,MAAAA,KAAK,CAACyB,MAAN,CAAa,iCAAb,EAAgD;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAhD;AACH;;;kCAEa;AACV1B,MAAAA,KAAK,CAACyB,MAAN,CAAa,gCAAb,EAA+C;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA/C;AACA,WAAKZ,eAAL;AACA,WAAKP,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH;;;6BAEQ;AAAA;;AACL,UAAI,KAAKhB,KAAL,CAAWG,SAAf,EAA0B;AACtB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAP;AACH,OAFD,MAEO;AACH,eACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,SAAD;AACI,UAAA,eAAe,EAAE,KAAKH,KAAL,CAAWE,eADhC;AAEI,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAF5B;AAGI,UAAA,QAAQ,EAAE,KAAKG,YAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAMI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEhB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAII,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,SAAS,EAAEJ,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAMI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AACI,UAAA,MAAM,EAAE,gBAACe,KAAD;AAAA,mBAAW,oBAAC,KAAD;AACf,cAAA,OAAO,EAAE,MAAI,CAACQ;AADC,eAEXR,KAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;AAAA,WADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,EAYI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAEZ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZJ,EAcI,oBAAC,YAAD;AACI,UAAA,KAAK,MADT;AACU,UAAA,IAAI,EAAC,YADf;AAEI,UAAA,aAAa,EAAE,KAAKa,KAAL,CAAWE,eAF9B;AAGI,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAH5B;AAII,UAAA,SAAS,EAAEN,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdJ,EAsBI,oBAAC,YAAD;AACI,UAAA,IAAI,EAAC,2BADT;AAEI,UAAA,aAAa,EAAE,KAAKK,KAAL,CAAWE,eAF9B;AAGI,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAH5B;AAII,UAAA,SAAS,EAAER,oBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtBJ,EA8BI,oBAAC,YAAD;AACI,UAAA,IAAI,EAAC,4BADT;AAEI,UAAA,aAAa,EAAE,KAAKO,KAAL,CAAWE,eAF9B;AAGI,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAH5B;AAII,UAAA,SAAS,EAAEP,qBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA9BJ,EAsCI,oBAAC,YAAD;AACI,UAAA,aAAa,EAAE,KAAKM,KAAL,CAAWE,eAD9B;AAEI,UAAA,IAAI,EAAC,YAFT;AAGI,UAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAH5B;AAII,UAAA,SAAS,EAAEhB,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAtCJ,EA6CI,oBAAC,YAAD;AACI,UAAA,aAAa,EAAE,KAAKe,KAAL,CAAWE,eAD9B;AAEI,UAAA,IAAI,EAAC,yBAFT;AAGI,UAAA,SAAS,EAAEL,UAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA7CJ,EAmDI,oBAAC,YAAD;AACI,UAAA,aAAa,EAAE,KAAKG,KAAL,CAAWE,eAD9B;AAEI,UAAA,IAAI,EAAC,iBAFT;AAGI,UAAA,SAAS,EAAEN,KAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnDJ,EAyDI,oBAAC,KAAD;AAAO,UAAA,SAAS,EAAEN,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAzDJ,CADJ,CANJ,CADJ;AAuEH;AAKJ;;;;EAvIaZ,S;;AA0IlB,eAAeE,UAAU,CAACkB,GAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\n\nimport Glossary from '../glossary/Glossary';\nimport CreateTopic from '../topic/CreateTopic';\nimport Login from '../user/Login';\nimport Signup from '../user/Signup';\nimport Home from '../common/Home';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport PrivateRoute from '../common/PrivateRoute';\nimport toast from 'toasted-notes'\nimport 'toasted-notes/src/styles.css';\nimport UserCreatedTopicList from \"../topic/UserCreatedTopicList\";\nimport UserEnrolledTopicList from \"../topic/UserEnrolledTopicList\";\nimport UserProfile from \"../user/UserProfile\";\nimport Topic from \"../topic/Topic\";\nimport AddContent from \"../learningpath/AddContent\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: null,\n            isAuthenticated: false,\n            isLoading: true\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n        this.loadCurrentUser = this.loadCurrentUser.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    loadCurrentUser() {\n        this.setState({\n            isLoading: true\n        });\n\n        getCurrentUser()\n            .then(response => {\n                this.setState({\n                    currentUser: response,\n                    isAuthenticated: true,\n                    isLoading: false\n                });\n            }).catch(error => {\n                this.setState({\n                    isLoading: false\n                });\n            });\n    }\n\n    componentDidMount() {\n        this.loadCurrentUser();\n    }\n\n    handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN);\n\n        this.setState({\n            currentUser: null,\n            isAuthenticated: false\n        });\n\n        this.props.history.push(\"/\");\n\n        toast.notify(\"You're successfully logged out.\", { position: \"bottom-right\" });\n    }\n\n    handleLogin() {\n        toast.notify(\"You're successfully logged in.\", { position: \"bottom-right\" });\n        this.loadCurrentUser();\n        this.props.history.push(\"/glossary\");\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <h1>isLoading!...</h1>\n        } else {\n            return (\n                <div className=\"App\">\n                    <AppHeader\n                        isAuthenticated={this.state.isAuthenticated}\n                        currentUser={this.state.currentUser}\n                        onLogout={this.handleLogout} />\n\n                    <div className=\"container\">\n                        <Switch>\n\n                            <Route exact path=\"/\" component={Home}></Route>\n\n                            <Route path=\"/glossary\" component={Glossary}></Route>\n\n                            <Route path=\"/login\"\n                                render={(props) => <Login\n                                    onLogin={this.handleLogin}\n                                    {...props} />}>\n                            </Route>\n\n                            <Route path=\"/signup\" component={Signup}></Route>\n\n                            <PrivateRoute\n                                exact path=\"/:username\"\n                                authenticated={this.state.isAuthenticated}\n                                currentUser={this.state.currentUser}\n                                component={UserProfile}\n                            >\n                            </PrivateRoute>\n\n                            <PrivateRoute\n                                path=\"/:username/topics/created\"\n                                authenticated={this.state.isAuthenticated}\n                                currentUser={this.state.currentUser}\n                                component={UserCreatedTopicList}\n                            >\n                            </PrivateRoute>\n\n                            <PrivateRoute\n                                path=\"/:username/topics/enrolled\"\n                                authenticated={this.state.isAuthenticated}\n                                currentUser={this.state.currentUser}\n                                component={UserEnrolledTopicList}\n                            >\n                            </PrivateRoute>\n\n                            <PrivateRoute\n                                authenticated={this.state.isAuthenticated}\n                                path=\"/topic/new\"\n                                currentUser={this.state.currentUser}\n                                component={CreateTopic}\n                            ></PrivateRoute>\n\n                            <PrivateRoute\n                                authenticated={this.state.isAuthenticated}\n                                path=\"/topic/:topicId/content\"\n                                component={AddContent}\n                            ></PrivateRoute>\n\n                            <PrivateRoute\n                                authenticated={this.state.isAuthenticated}\n                                path=\"/topic/:topicId\"\n                                component={Topic}\n                            ></PrivateRoute>\n\n                            <Route component={NotFound}></Route>\n\n                        </Switch>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n\n    }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}