{"ast":null,"code":"var _jsxFileName = \"/Users/tallrye/React/swe573/wlearn-react/src/learningpath/AddContent.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport { createContent } from \"../util/APIUtils\";\nimport toast from \"toasted-notes\";\nimport EditorField from '../components/EditorField';\n\nvar AddContent = function AddContent(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pageHeader text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Add Material\")))), React.createElement(\"div\", {\n    className: \"sectionPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container text-left \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    style: {\n      fontSize: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Things to \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Consider\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    style: {\n      fontSize: '14px',\n      textAlign: 'justify'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Neque ipsam ut consectetur vel excepturi alias laboriosam totam fuga reprehenderit officiis, sed aliquam accusamus repellat laborum! Fuga cupiditate porro exercitationem quod.\")), React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Formik, {\n    initialValues: {\n      title: '',\n      text: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.title) {\n        errors.title = 'Content Title is required';\n      }\n\n      if (!values.text) {\n        errors.text = 'Content Text is required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        var topicId = props.match.params.topicId;\n        var newContent = {\n          title: values.title,\n          text: values.text\n        };\n        createContent(newContent, topicId).then(function (res) {\n          toast.notify(\"Content created successfully.\", {\n            position: \"bottom-right\"\n          });\n          props.history.push(\"/topic/\".concat(topicId));\n        }).catch(function (err) {\n          toast.notify(\"Topic does not exist!\", {\n            position: \"bottom-right\"\n          });\n        });\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentTitle\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Material \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"title\",\n      id: \"contentTitle\",\n      placeholder: \"content title\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentTitle\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentText\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Material \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Body\"), \" \"), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"text\",\n      component: EditorField,\n      placeholder: \"Enter Content\",\n      row: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentText\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      block: true,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Save\"));\n  }))));\n};\n\nexport default AddContent;","map":{"version":3,"sources":["/Users/tallrye/React/swe573/wlearn-react/src/learningpath/AddContent.js"],"names":["React","Formik","Form","Field","ErrorMessage","Button","createContent","toast","EditorField","AddContent","props","fontSize","textAlign","title","text","values","errors","setSubmitting","setTimeout","topicId","match","params","newContent","then","res","notify","position","history","push","catch","err","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport { createContent } from \"../util/APIUtils\";\nimport toast from \"toasted-notes\";\nimport EditorField from '../components/EditorField'\n\nconst AddContent = (props) => (\n    <div>\n        <div className=\"pageHeader text-left\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        Add Material\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"sectionPadding\">\n            <div className=\"container text-left \">\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <h4 style={{ fontSize: '20px' }}>Things to <strong>Consider</strong></h4>\n                        <hr />\n                        <p style={{ fontSize: '14px', textAlign: 'justify' }}>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Neque ipsam ut consectetur vel excepturi alias laboriosam totam\n                    fuga reprehenderit officiis, sed aliquam accusamus repellat laborum! Fuga cupiditate porro exercitationem quod.</p>\n                    </div>\n                    <div className=\"col-md-8 offset-md-1\"></div>\n                </div>\n                <Formik\n                    initialValues={{ title: '', text: '' }}\n                    validate={values => {\n                        let errors = {};\n\n                        if (!values.title) {\n                            errors.title = 'Content Title is required';\n                        }\n\n                        if (!values.text) {\n                            errors.text = 'Content Text is required';\n                        }\n\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n\n                            let topicId = props.match.params.topicId;\n                            const newContent = {\n                                title: values.title,\n                                text: values.text\n                            };\n\n                            createContent(newContent, topicId)\n                                .then(res => {\n                                    toast.notify(\"Content created successfully.\", { position: \"bottom-right\" });\n                                    props.history.push(`/topic/${topicId}`);\n                                }).catch(err => {\n                                    toast.notify(\"Topic does not exist!\", { position: \"bottom-right\" });\n                                });\n\n                            setSubmitting(false);\n                        }, 400);\n                    }}\n                >\n                    {({ isSubmitting }) => (\n                        <Form>\n                            <div className=\"form-group row text-left\">\n                                <label htmlFor=\"contentTitle\" className=\"col-sm-12 col-form-label\">Material <strong>Title</strong></label>\n                                <div className=\"col-sm-12\">\n                                    <Field type=\"text\" name=\"title\" id=\"contentTitle\" placeholder=\"content title\" className=\"form-control\" />\n                                    <ErrorMessage name=\"contentTitle\" component=\"div\" />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row text-left\">\n                                <label htmlFor=\"contentText\" className=\"col-sm-12 col-form-label\">Material <strong>Body</strong> </label>\n                                <div className=\"col-sm-12\">\n                                    <Field name=\"text\" component={EditorField} placeholder=\"Enter Content\" row=\"20\" />\n                                    <ErrorMessage name=\"contentText\" component=\"div\" />\n                                </div>\n                            </div>\n\n                            <Button variant=\"success\" type=\"submit\" block disabled={isSubmitting}>Save</Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    </div>\n);\n\nexport default AddContent;"]},"metadata":{},"sourceType":"module"}