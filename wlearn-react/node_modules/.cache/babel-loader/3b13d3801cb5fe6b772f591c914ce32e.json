{"ast":null,"code":"var helpers = require('../helpers/helpers');\n\nvar sparqlQuery = require('./sparql_query'); // Fiter-out properties. Can't be filtered by\n// `?subject a wikibase:Item`, as those triples are omitted\n// https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#WDQS_data_differences\n\n\nvar itemsOnly = 'FILTER NOT EXISTS { ?subject rdf:type wikibase:Property . } ';\n\nmodule.exports = function (property, value) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var limit = options.limit,\n      caseInsensitive = options.caseInsensitive,\n      keepProperties = options.keepProperties;\n  var valueFn = caseInsensitive ? caseInsensitiveValueQuery : directValueQuery;\n  var filter = keepProperties ? '' : itemsOnly; // Allow to request values for several properties at once\n\n  if (property instanceof Array) {\n    property = property.map(prefixifyProperty).join('|');\n  } else {\n    property = prefixifyProperty(property);\n  }\n\n  var valueBlock = getValueBlock(value, valueFn, property, filter);\n  var sparql = \"SELECT DISTINCT ?subject WHERE { \".concat(valueBlock, \" }\");\n  if (limit) sparql += \" LIMIT \".concat(limit);\n  return sparqlQuery(sparql);\n};\n\nfunction getValueBlock(value, valueFn, property, filter) {\n  if (!(value instanceof Array)) {\n    return valueFn(property, getValueString(value), filter);\n  }\n\n  var valuesBlocks = value.map(getValueString).map(function (valStr) {\n    return valueFn(property, valStr, filter);\n  });\n  return '{ ' + valuesBlocks.join('} UNION {') + ' }';\n}\n\nfunction getValueString(value) {\n  if (helpers.isItemId(value)) {\n    value = \"wd:\".concat(value);\n  } else if (typeof value === 'string') {\n    value = \"'\".concat(value, \"'\");\n  }\n\n  return value;\n}\n\nfunction directValueQuery(property, value, filter, limit) {\n  return \"?subject \".concat(property, \" \").concat(value, \" .\\n    \").concat(filter);\n} // Discussion on how to make this query optimal:\n// http://stackoverflow.com/q/43073266/3324977\n\n\nfunction caseInsensitiveValueQuery(property, value, filter, limit) {\n  return \"?subject \".concat(property, \" ?value .\\n    FILTER (lcase(?value) = \").concat(value.toLowerCase(), \")\\n    \").concat(filter);\n}\n\nvar prefixifyProperty = function prefixifyProperty(property) {\n  return 'wdt:' + property;\n};","map":null,"metadata":{},"sourceType":"script"}