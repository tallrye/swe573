{"ast":null,"code":"import _classCallCheck from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/app/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { getCurrentUser } from '../util/APIUtils';\nimport { ACCESS_TOKEN } from '../constants';\nimport Glossary from '../glossary/Glossary';\nimport CreateTopic from '../topic/CreateTopic';\nimport Login from '../user/Login';\nimport Signup from '../user/Signup';\nimport Home from '../common/Home';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport PrivateRoute from '../common/PrivateRoute';\nimport toast from 'toasted-notes';\nimport 'toasted-notes/src/styles.css';\nimport UserCreatedTopicList from \"../topic/UserCreatedTopicList\";\nimport UserEnrolledTopicList from \"../topic/UserEnrolledTopicList\";\nimport UserProfile from \"../user/UserProfile\";\nimport Topic from \"../topic/Topic\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      currentUser: null,\n      isAuthenticated: false,\n      isLoading: false\n    };\n    _this.handleLogout = _this.handleLogout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadCurrentUser = _this.loadCurrentUser.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadCurrentUser\",\n    value: function loadCurrentUser() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      getCurrentUser().then(function (response) {\n        _this2.setState({\n          currentUser: response,\n          isAuthenticated: true,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadCurrentUser();\n    }\n  }, {\n    key: \"handleLogout\",\n    value: function handleLogout() {\n      localStorage.removeItem(ACCESS_TOKEN);\n      this.setState({\n        currentUser: null,\n        isAuthenticated: false\n      });\n      this.props.history.push(\"/\");\n      toast.notify(\"You're successfully logged out.\", {\n        position: \"bottom-right\"\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin() {\n      toast.notify(\"You're successfully logged in.\", {\n        position: \"bottom-right\"\n      });\n      this.loadCurrentUser();\n      this.props.history.push(\"/glossary\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"isLoading!...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(AppHeader, {\n        isAuthenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser,\n        onLogout: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/glossary\",\n        component: Glossary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/login\",\n        render: function render(props) {\n          return React.createElement(Login, Object.assign({\n            onLogin: _this3.handleLogin\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/signup\",\n        component: Signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        exact: true,\n        path: \"/:username\",\n        authenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser,\n        component: UserProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/:username/topics/created\",\n        authenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser,\n        component: UserCreatedTopicList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        path: \"/:username/topics/enrolled\",\n        authenticated: this.state.isAuthenticated,\n        currentUser: this.state.currentUser,\n        component: UserEnrolledTopicList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        authenticated: this.state.isAuthenticated,\n        path: \"/topic/new\",\n        currentUser: this.state.currentUser,\n        component: CreateTopic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        authenticated: this.state.isAuthenticated,\n        path: \"/topic/:topicId\",\n        component: Topic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/app/App.js"],"names":["React","Component","Route","withRouter","Switch","getCurrentUser","ACCESS_TOKEN","Glossary","CreateTopic","Login","Signup","Home","AppHeader","NotFound","PrivateRoute","toast","UserCreatedTopicList","UserEnrolledTopicList","UserProfile","Topic","App","props","state","currentUser","isAuthenticated","isLoading","handleLogout","bind","loadCurrentUser","handleLogin","setState","then","response","catch","error","localStorage","removeItem","history","push","notify","position"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Route, withRouter, Switch} from 'react-router-dom';\nimport {getCurrentUser} from '../util/APIUtils';\nimport {ACCESS_TOKEN} from '../constants';\n\nimport Glossary from '../glossary/Glossary';\nimport CreateTopic from '../topic/CreateTopic';\nimport Login from '../user/Login';\nimport Signup from '../user/Signup';\nimport Home from '../common/Home';\nimport AppHeader from '../common/AppHeader';\nimport NotFound from '../common/NotFound';\nimport PrivateRoute from '../common/PrivateRoute';\nimport toast from 'toasted-notes'\nimport 'toasted-notes/src/styles.css';\nimport UserCreatedTopicList from \"../topic/UserCreatedTopicList\";\nimport UserEnrolledTopicList from \"../topic/UserEnrolledTopicList\";\nimport UserProfile from \"../user/UserProfile\";\nimport Topic from \"../topic/Topic\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: null,\n            isAuthenticated: false,\n            isLoading: false\n        };\n        this.handleLogout = this.handleLogout.bind(this);\n        this.loadCurrentUser = this.loadCurrentUser.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    loadCurrentUser() {\n        this.setState({\n            isLoading: true\n        });\n\n        getCurrentUser()\n            .then(response => {\n                this.setState({\n                    currentUser: response,\n                    isAuthenticated: true,\n                    isLoading: false\n                });\n            }).catch(error => {\n            this.setState({\n                isLoading: false\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.loadCurrentUser();\n    }\n\n    handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN);\n\n        this.setState({\n            currentUser: null,\n            isAuthenticated: false\n        });\n\n        this.props.history.push(\"/\");\n\n        toast.notify(\"You're successfully logged out.\", { position : \"bottom-right\"});\n    }\n\n    handleLogin() {\n        toast.notify(\"You're successfully logged in.\", { position : \"bottom-right\"});\n        this.loadCurrentUser();\n        this.props.history.push(\"/glossary\");\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return <h1>isLoading!...</h1>\n        }\n\n        return (\n            <div className=\"App\">\n                <AppHeader\n                   isAuthenticated={this.state.isAuthenticated}\n                   currentUser={this.state.currentUser}\n                   onLogout={this.handleLogout}/>\n\n                <div className=\"container\">\n                    <Switch>\n\n                        <Route exact path=\"/\" component={Home}></Route>\n\n                        <Route path=\"/glossary\" component={Glossary}></Route>\n\n                        <Route path=\"/login\" \n                            render={(props) => <Login \n                                onLogin={this.handleLogin} \n                                {...props} />}>\n                        </Route>\n\n                        <Route path=\"/signup\" component={Signup}></Route>\n\n                        <PrivateRoute\n                            exact path=\"/:username\"\n                            authenticated={this.state.isAuthenticated}\n                            currentUser={this.state.currentUser}\n                            component={UserProfile}\n                        >\n                        </PrivateRoute>\n\n                        <PrivateRoute\n                            path=\"/:username/topics/created\"\n                            authenticated={this.state.isAuthenticated}\n                            currentUser={this.state.currentUser}\n                            component={UserCreatedTopicList}\n                        >\n                        </PrivateRoute>\n\n                        <PrivateRoute\n                            path=\"/:username/topics/enrolled\"\n                            authenticated={this.state.isAuthenticated}\n                            currentUser={this.state.currentUser}\n                            component={UserEnrolledTopicList}\n                        >\n                        </PrivateRoute>\n\n                        <PrivateRoute \n                            authenticated={this.state.isAuthenticated} \n                            path=\"/topic/new\"\n                            currentUser={this.state.currentUser}\n                            component={CreateTopic}\n                        ></PrivateRoute>\n\n                        <PrivateRoute\n                            authenticated={this.state.isAuthenticated}\n                            path=\"/topic/:topicId\"\n                            component={Topic}\n                        ></PrivateRoute>\n\n                        <Route component={NotFound}></Route>\n\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}