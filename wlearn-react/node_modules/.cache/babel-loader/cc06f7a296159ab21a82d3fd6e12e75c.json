{"ast":null,"code":"var _jsxFileName = \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/learningpath/AddContent.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport EditorField from '../components/EditorField';\n\nvar AddContent = function AddContent() {\n  return React.createElement(\"div\", {\n    className: \"text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"mt-5 mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Create Content\"), React.createElement(Formik, {\n    initialValues: {\n      contentText: '',\n      contentTitle: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.contentText) {\n        errors.contentText = 'Content Text is required';\n      }\n\n      if (!values.contentTitle) {\n        errors.contentTitle = 'Content Title is required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentTitle\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Content Title:\"), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"contentTitle\",\n      id: \"contentTitle\",\n      placeholder: \"content title\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentTitle\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentText\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Content Text: \"), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: contentText,\n      component: EditorField,\n      placeholder: \"Enter Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentText\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      block: true,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Create Content\"));\n  }));\n};\n\nexport default AddContent;","map":{"version":3,"sources":["/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/learningpath/AddContent.js"],"names":["React","Formik","Form","Field","ErrorMessage","Button","EditorField","AddContent","contentText","contentTitle","values","errors","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SACf;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,WAAW,EAAE,EAAf;AAAmBC,MAAAA,YAAY,EAAE;AAAjC,KADnB;AAEI,IAAA,QAAQ,EAAE,kBAAAC,MAAM,EAAI;AAChB,UAAIC,MAAM,GAAG,EAAb;;AAEA,UAAI,CAACD,MAAM,CAACF,WAAZ,EAAyB;AACrBG,QAAAA,MAAM,CAACH,WAAP,GAAqB,0BAArB;AACH;;AAED,UAAI,CAACE,MAAM,CAACD,YAAZ,EAA0B;AACtBE,QAAAA,MAAM,CAACF,YAAP,GAAsB,2BAAtB;AACH;;AAED,aAAOE,MAAP;AACH,KAdL;AAeI,IAAA,QAAQ,EAAE,kBAACD,MAAD,QAA+B;AAAA,UAApBE,aAAoB,QAApBA,aAAoB;AACrCC,MAAAA,UAAU,CAAC,YAAM;AACbC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAE,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH,OAHS,EAGP,GAHO,CAAV;AAIH,KApBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBK;AAAA,QAAGK,YAAH,SAAGA,YAAH;AAAA,WACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,cAAf;AAA8B,MAAA,SAAS,EAAC,0BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,cAAxB;AAAuC,MAAA,EAAE,EAAC,cAA1C;AAAyD,MAAA,WAAW,EAAC,eAArE;AAAqF,MAAA,SAAS,EAAC,cAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,cAAnB;AAAkC,MAAA,SAAS,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,SAAS,EAAC,0BAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAET,WAAb;AAA0B,MAAA,SAAS,EAAEF,WAArC;AAAkD,MAAA,WAAW,EAAC,eAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,CATJ,EAiBI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,KAAK,MAA7C;AAA8C,MAAA,QAAQ,EAAEW,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjBJ,CADH;AAAA,GAtBL,CAFJ,CADe;AAAA,CAAnB;;AAkDA,eAAeV,UAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport EditorField from '../components/EditorField'\n\nconst AddContent = () => (\n    <div className=\"text-left\">\n        <h4 className=\"mt-5 mb-5\">Create Content</h4>\n        <Formik\n            initialValues={{ contentText: '', contentTitle: '' }}\n            validate={values => {\n                let errors = {};\n\n                if (!values.contentText) {\n                    errors.contentText = 'Content Text is required';\n                }\n\n                if (!values.contentTitle) {\n                    errors.contentTitle = 'Content Title is required';\n                }\n\n                return errors;\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    alert(JSON.stringify(values, null, 2));\n                    setSubmitting(false);\n                }, 400);\n            }}\n        >\n            {({ isSubmitting }) => (\n                <Form>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"contentTitle\" className=\"col-sm-12 col-form-label\">Content Title:</label>\n                        <div className=\"col-sm-12\">\n                            <Field type=\"text\" name=\"contentTitle\" id=\"contentTitle\" placeholder=\"content title\" className=\"form-control\" />\n                            <ErrorMessage name=\"contentTitle\" component=\"div\" />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"contentText\" className=\"col-sm-12 col-form-label\">Content Text: </label>\n                        <div className=\"col-sm-12\">\n                            <Field name={contentText} component={EditorField} placeholder=\"Enter Content\" />\n                            <ErrorMessage name=\"contentText\" component=\"div\" />\n                        </div>\n                    </div>\n\n                    <Button variant=\"primary\" type=\"submit\" block disabled={isSubmitting}>Create Content</Button>\n                </Form>\n            )}\n        </Formik>\n    </div>\n);\n\nexport default AddContent;\n"]},"metadata":{},"sourceType":"module"}