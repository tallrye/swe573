{"ast":null,"code":"import { API_BASE_URL, TOPIC_LIST_SIZE, ACCESS_TOKEN } from '../constants';\n\nvar request = function request(options) {\n  var headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  var defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(function (response) {\n    return response.json().then(function (json) {\n      if (!response.ok) {\n        return Promise.reject(json);\n      }\n\n      return json;\n    });\n  });\n};\n\nexport function getAllTopics(page, size) {\n  page = page || 0;\n  size = size || TOPIC_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/topics?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function createTopic(topicData) {\n  return request({\n    url: API_BASE_URL + \"/topics\",\n    method: 'POST',\n    body: JSON.stringify(topicData)\n  });\n}\nexport function castVote(voteData) {\n  return request({\n    url: API_BASE_URL + \"/polls/\" + voteData.pollId + \"/votes\",\n    method: 'POST',\n    body: JSON.stringify(voteData)\n  });\n}\nexport function login(loginRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signin\",\n    method: 'POST',\n    body: JSON.stringify(loginRequest)\n  });\n}\nexport function signup(signupRequest) {\n  return request({\n    url: API_BASE_URL + \"/auth/signup\",\n    method: 'POST',\n    body: JSON.stringify(signupRequest)\n  });\n}\nexport function checkUsernameAvailability(username) {\n  return request({\n    url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n    method: 'GET'\n  });\n}\nexport function checkEmailAvailability(email) {\n  return request({\n    url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n    method: 'GET'\n  });\n}\nexport function getCurrentUser() {\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\n    return Promise.reject(\"No access token set.\");\n  }\n\n  return request({\n    url: API_BASE_URL + \"/user/me\",\n    method: 'GET'\n  });\n}\nexport function getUserProfile(username) {\n  return request({\n    url: API_BASE_URL + \"/users/\" + username,\n    method: 'GET'\n  });\n}\nexport function getUserCreatedTopics(username, page, size) {\n  page = page || 0;\n  size = size || TOPIC_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/topics?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}\nexport function getUserVotedPolls(username, page, size) {\n  page = page || 0;\n  size = size || TOPIC_LIST_SIZE;\n  return request({\n    url: API_BASE_URL + \"/users/\" + username + \"/votes?page=\" + page + \"&size=\" + size,\n    method: 'GET'\n  });\n}","map":{"version":3,"sources":["/Users/tallrye/React/swe573/wlearn-react/src/util/APIUtils.js"],"names":["API_BASE_URL","TOPIC_LIST_SIZE","ACCESS_TOKEN","request","options","headers","Headers","localStorage","getItem","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","getAllTopics","page","size","method","createTopic","topicData","body","JSON","stringify","castVote","voteData","pollId","login","loginRequest","signup","signupRequest","checkUsernameAvailability","username","checkEmailAvailability","email","getCurrentUser","getUserProfile","getUserCreatedTopics","getUserVotedPolls"],"mappings":"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","sourcesContent":["import {API_BASE_URL, TOPIC_LIST_SIZE, ACCESS_TOKEN} from '../constants';\n\nconst request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n        .then(response =>\n            response.json().then(json => {\n                if (!response.ok) {\n                    return Promise.reject(json);\n                }\n                return json;\n            })\n        );\n};\n\nexport function getAllTopics(page, size) {\n    page = page || 0;\n    size = size || TOPIC_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/topics?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function createTopic(topicData) {\n    return request({\n        url: API_BASE_URL + \"/topics\",\n        method: 'POST',\n        body: JSON.stringify(topicData)\n    });\n}\n\nexport function castVote(voteData) {\n    return request({\n        url: API_BASE_URL + \"/polls/\" + voteData.pollId + \"/votes\",\n        method: 'POST',\n        body: JSON.stringify(voteData)\n    });\n}\n\nexport function login(loginRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signin\",\n        method: 'POST',\n        body: JSON.stringify(loginRequest)\n    });\n}\n\nexport function signup(signupRequest) {\n    return request({\n        url: API_BASE_URL + \"/auth/signup\",\n        method: 'POST',\n        body: JSON.stringify(signupRequest)\n    });\n}\n\nexport function checkUsernameAvailability(username) {\n    return request({\n        url: API_BASE_URL + \"/user/checkUsernameAvailability?username=\" + username,\n        method: 'GET'\n    });\n}\n\nexport function checkEmailAvailability(email) {\n    return request({\n        url: API_BASE_URL + \"/user/checkEmailAvailability?email=\" + email,\n        method: 'GET'\n    });\n}\n\n\nexport function getCurrentUser() {\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\n        return Promise.reject(\"No access token set.\");\n    }\n\n    return request({\n        url: API_BASE_URL + \"/user/me\",\n        method: 'GET'\n    });\n}\n\nexport function getUserProfile(username) {\n    return request({\n        url: API_BASE_URL + \"/users/\" + username,\n        method: 'GET'\n    });\n}\n\nexport function getUserCreatedTopics(username, page, size) {\n    page = page || 0;\n    size = size || TOPIC_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/topics?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}\n\nexport function getUserVotedPolls(username, page, size) {\n    page = page || 0;\n    size = size || TOPIC_LIST_SIZE;\n\n    return request({\n        url: API_BASE_URL + \"/users/\" + username + \"/votes?page=\" + page + \"&size=\" + size,\n        method: 'GET'\n    });\n}"]},"metadata":{},"sourceType":"module"}