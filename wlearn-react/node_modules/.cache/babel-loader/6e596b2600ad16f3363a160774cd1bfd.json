{"ast":null,"code":"var _jsxFileName = \"/Users/tallrye/React/swe573/wlearn-react/src/learningpath/AddContent.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport { createContent } from \"../util/APIUtils\";\nimport toast from \"toasted-notes\";\nimport EditorField from '../components/EditorField';\n\nvar AddContent = function AddContent(props) {\n  return React.createElement(\"div\", {\n    className: \"sectionPadding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container text-left \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Add New \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \" Material\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(Formik, {\n    initialValues: {\n      title: '',\n      text: ''\n    },\n    validate: function validate(values) {\n      var errors = {};\n\n      if (!values.title) {\n        errors.title = 'Content Title is required';\n      }\n\n      if (!values.text) {\n        errors.text = 'Content Text is required';\n      }\n\n      return errors;\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        var topicId = props.match.params.topicId;\n        var newContent = {\n          title: values.title,\n          text: values.text\n        };\n        createContent(newContent, topicId).then(function (res) {\n          toast.notify(\"Content created successfully.\", {\n            position: \"bottom-right\"\n          });\n          props.history.push(\"/topic/\".concat(topicId));\n        }).catch(function (err) {\n          toast.notify(\"Topic does not exist!\", {\n            position: \"bottom-right\"\n          });\n        });\n        setSubmitting(false);\n      }, 400);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group row text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentTitle\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Material \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Title\")), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"title\",\n      id: \"contentTitle\",\n      placeholder: \"content title\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentTitle\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"contentText\",\n      className: \"col-sm-12 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Material \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Body\"), \" \"), React.createElement(\"div\", {\n      className: \"col-sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"text\",\n      component: EditorField,\n      placeholder: \"Enter Content\",\n      row: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"contentText\",\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      block: true,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Save\"));\n  })));\n};\n\nexport default AddContent;","map":{"version":3,"sources":["/Users/tallrye/React/swe573/wlearn-react/src/learningpath/AddContent.js"],"names":["React","Formik","Form","Field","ErrorMessage","Button","createContent","toast","EditorField","AddContent","props","title","text","values","errors","setSubmitting","setTimeout","topicId","match","params","newContent","then","res","notify","position","history","push","catch","err","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Button } from \"react-bootstrap\";\nimport { createContent } from \"../util/APIUtils\";\nimport toast from \"toasted-notes\";\nimport EditorField from '../components/EditorField'\n\nconst AddContent = (props) => (\n    <div className=\"sectionPadding\">\n        <div className=\"container text-left \">\n            <h4 className=\"mb-4\">Add New <strong> Material</strong></h4>\n            <hr />\n            <Formik\n                initialValues={{ title: '', text: '' }}\n                validate={values => {\n                    let errors = {};\n\n                    if (!values.title) {\n                        errors.title = 'Content Title is required';\n                    }\n\n                    if (!values.text) {\n                        errors.text = 'Content Text is required';\n                    }\n\n                    return errors;\n                }}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n\n                        let topicId = props.match.params.topicId;\n                        const newContent = {\n                            title: values.title,\n                            text: values.text\n                        };\n\n                        createContent(newContent, topicId)\n                            .then(res => {\n                                toast.notify(\"Content created successfully.\", { position: \"bottom-right\" });\n                                props.history.push(`/topic/${topicId}`);\n                            }).catch(err => {\n                                toast.notify(\"Topic does not exist!\", { position: \"bottom-right\" });\n                            });\n\n                        setSubmitting(false);\n                    }, 400);\n                }}\n            >\n                {({ isSubmitting }) => (\n                    <Form>\n                        <div className=\"form-group row text-left\">\n                            <label htmlFor=\"contentTitle\" className=\"col-sm-12 col-form-label\">Material <strong>Title</strong></label>\n                            <div className=\"col-sm-12\">\n                                <Field type=\"text\" name=\"title\" id=\"contentTitle\" placeholder=\"content title\" className=\"form-control\" />\n                                <ErrorMessage name=\"contentTitle\" component=\"div\" />\n                            </div>\n                        </div>\n\n                        <div className=\"form-group row text-left\">\n                            <label htmlFor=\"contentText\" className=\"col-sm-12 col-form-label\">Material <strong>Body</strong> </label>\n                            <div className=\"col-sm-12\">\n                                <Field name=\"text\" component={EditorField} placeholder=\"Enter Content\" row=\"20\" />\n                                <ErrorMessage name=\"contentText\" component=\"div\" />\n                            </div>\n                        </div>\n\n                        <Button variant=\"success\" type=\"submit\" block disabled={isSubmitting}>Save</Button>\n                    </Form>\n                )}\n            </Formik>\n        </div>\n    </div>\n);\n\nexport default AddContent;"]},"metadata":{},"sourceType":"module"}