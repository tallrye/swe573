{"ast":null,"code":"var _slicedToArray = require(\"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nmodule.exports = function (wikidataTime) {\n  // Also accept claim datavalue.value objects\n  if (typeof wikidataTime === 'object') {\n    wikidataTime = wikidataTime.time;\n  }\n\n  var sign = wikidataTime[0];\n\n  var _wikidataTime$slice$s = wikidataTime.slice(1).split('T'),\n      _wikidataTime$slice$s2 = _slicedToArray(_wikidataTime$slice$s, 2),\n      yearMonthDay = _wikidataTime$slice$s2[0],\n      withinDay = _wikidataTime$slice$s2[1]; // Wikidata generates invalid ISO dates to indicate precision\n  // ex: +1990-00-00T00:00:00Z to indicate 1990 with year precision\n\n\n  yearMonthDay = yearMonthDay.replace(/-00/g, '-01');\n  var rest = \"\".concat(yearMonthDay, \"T\").concat(withinDay);\n  return fullDateData(sign, rest);\n};\n\nvar fullDateData = function fullDateData(sign, rest) {\n  var year = rest.split('-')[0];\n  var needsExpandedYear = sign === '-' || year.length > 4;\n  return needsExpandedYear ? expandedYearDate(sign, rest, year) : new Date(rest);\n};\n\nvar expandedYearDate = function expandedYearDate(sign, rest, year) {\n  var date; // Using ISO8601 expanded notation for negative years or positive\n  // years with more than 4 digits: adding up to 2 leading zeros\n  // when needed. Can't find the documentation again, but testing\n  // with `new Date(date)` gives a good clue of the implementation\n\n  if (year.length === 4) {\n    date = \"\".concat(sign, \"00\").concat(rest);\n  } else if (year.length === 5) {\n    date = \"\".concat(sign, \"0\").concat(rest);\n  } else {\n    date = sign + rest;\n  }\n\n  return new Date(date);\n};","map":null,"metadata":{},"sourceType":"script"}