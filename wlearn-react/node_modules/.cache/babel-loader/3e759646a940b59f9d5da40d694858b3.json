{"ast":null,"code":"import _slicedToArray from \"/Users/tallrye/React/swe573/wlearn-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tallrye/React/swe573/wlearn-react/src/components/EditorField.js\";\nimport React, { useState, useEffect } from 'react';\nimport RichTextEditor from 'react-rte';\n\nfunction EditorField(FieldProps) {\n  var _useState = useState(RichTextEditor.createEmptyValue()),\n      _useState2 = _slicedToArray(_useState, 2),\n      editorState = _useState2[0],\n      setEditorState = _useState2[1];\n\n  useEffect(function () {\n    if (FieldProps.field.value !== null && typeof FieldProps.field.value !== 'undefined' && FieldProps.field.value !== editorState.toString('html')) {\n      setEditorState(RichTextEditor.createValueFromString(FieldProps.field.value, 'html'));\n    }\n  }, [FieldProps.field.value, editorState.toString('html')]);\n  return React.createElement(RichTextEditor, {\n    value: editorState,\n    onChange: function onChange(text) {\n      FieldProps.form.setFieldValue(FieldProps.field.name, text.toString('html'));\n      setEditorState(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n}\n\nexport default EditorField;","map":{"version":3,"sources":["/Users/tallrye/React/swe573/wlearn-react/src/components/EditorField.js"],"names":["React","useState","useEffect","RichTextEditor","EditorField","FieldProps","createEmptyValue","editorState","setEditorState","field","value","toString","createValueFromString","text","form","setFieldValue","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,WAA3B;;AAEA,SAASC,WAAT,CAAqBC,UAArB,EAAiC;AAAA,kBACSJ,QAAQ,CAACE,cAAc,CAACG,gBAAf,EAAD,CADjB;AAAA;AAAA,MACtBC,WADsB;AAAA,MACTC,cADS;;AAE7BN,EAAAA,SAAS,CAAC,YAAM;AACZ,QACIG,UAAU,CAACI,KAAX,CAAiBC,KAAjB,KAA2B,IAA3B,IACA,OAAOL,UAAU,CAACI,KAAX,CAAiBC,KAAxB,KAAkC,WADlC,IAEAL,UAAU,CAACI,KAAX,CAAiBC,KAAjB,KAA2BH,WAAW,CAACI,QAAZ,CAAqB,MAArB,CAH/B,EAIE;AACEH,MAAAA,cAAc,CAACL,cAAc,CAACS,qBAAf,CAAqCP,UAAU,CAACI,KAAX,CAAiBC,KAAtD,EAA6D,MAA7D,CAAD,CAAd;AACH;AACJ,GARQ,EAQN,CAACL,UAAU,CAACI,KAAX,CAAiBC,KAAlB,EAAyBH,WAAW,CAACI,QAAZ,CAAqB,MAArB,CAAzB,CARM,CAAT;AASA,SACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAEJ,WADX;AAEI,IAAA,QAAQ,EAAE,kBAAAM,IAAI,EAAI;AACdR,MAAAA,UAAU,CAACS,IAAX,CAAgBC,aAAhB,CAA8BV,UAAU,CAACI,KAAX,CAAiBO,IAA/C,EAAqDH,IAAI,CAACF,QAAL,CAAc,MAAd,CAArD;AACAH,MAAAA,cAAc,CAACK,IAAD,CAAd;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH;;AAED,eAAeT,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport RichTextEditor from 'react-rte'\n\nfunction EditorField(FieldProps) {\n    const [editorState, setEditorState] = useState(RichTextEditor.createEmptyValue())\n    useEffect(() => {\n        if (\n            FieldProps.field.value !== null &&\n            typeof FieldProps.field.value !== 'undefined' &&\n            FieldProps.field.value !== editorState.toString('html')\n        ) {\n            setEditorState(RichTextEditor.createValueFromString(FieldProps.field.value, 'html'))\n        }\n    }, [FieldProps.field.value, editorState.toString('html')])\n    return (\n        <RichTextEditor\n            value={editorState}\n            onChange={text => {\n                FieldProps.form.setFieldValue(FieldProps.field.name, text.toString('html'))\n                setEditorState(text)\n            }}\n        />\n    )\n}\n\nexport default EditorField\n"]},"metadata":{},"sourceType":"module"}