{"ast":null,"code":"import _defineProperty from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/user/Signup.js\";\nimport React, { Component } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../util/APIUtils';\nimport { Link } from 'react-router-dom';\nimport { NAME_MIN_LENGTH, NAME_MAX_LENGTH, USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, EMAIL_MAX_LENGTH, PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH } from '../constants';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport toast from \"toasted-notes\";\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup(props) {\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Signup).call(this, props));\n\n    _this.validateName = function (name) {\n      if (name.length < NAME_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: \"Minimum \".concat(NAME_MIN_LENGTH, \" characters needed.\")\n        };\n      } else if (name.length > NAME_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: \"Maximum \".concat(NAME_MAX_LENGTH, \" characters allowed.\")\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    _this.validateEmail = function (email) {\n      if (!email) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Email may not be empty'\n        };\n      }\n\n      var EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n\n      if (!EMAIL_REGEX.test(email)) {\n        return {\n          validateStatus: 'error',\n          errorMsg: 'Email not valid'\n        };\n      }\n\n      if (email.length > EMAIL_MAX_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: \"Maximum \".concat(EMAIL_MAX_LENGTH, \" characters allowed.\")\n        };\n      }\n\n      return {\n        validateStatus: null,\n        errorMsg: null\n      };\n    };\n\n    _this.validateUsername = function (username) {\n      if (username.length < USERNAME_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: \"Minimum \".concat(USERNAME_MIN_LENGTH, \" characters needed.\")\n        };\n      } else if (username.length > USERNAME_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: \"Maximum \".concat(USERNAME_MAX_LENGTH, \" characters allowed.\")\n        };\n      } else {\n        return {\n          validateStatus: null,\n          errorMsg: null\n        };\n      }\n    };\n\n    _this.validatePassword = function (password) {\n      if (password.length < PASSWORD_MIN_LENGTH) {\n        return {\n          validateStatus: 'error',\n          errorMsg: \"Minimum \".concat(PASSWORD_MIN_LENGTH, \" characters needed.\")\n        };\n      } else if (password.length > PASSWORD_MAX_LENGTH) {\n        return {\n          validationStatus: 'error',\n          errorMsg: \"Maximum \".concat(PASSWORD_MAX_LENGTH, \" characters allowed.\")\n        };\n      } else {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      }\n    };\n\n    _this.state = {\n      name: {\n        value: ''\n      },\n      username: {\n        value: ''\n      },\n      email: {\n        value: ''\n      },\n      password: {\n        value: ''\n      }\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateUsernameAvailability = _this.validateUsernameAvailability.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validateEmailAvailability = _this.validateEmailAvailability.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.isFormInvalid = _this.isFormInvalid.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event, validationFun) {\n      var target = event.target;\n      var inputName = target.name;\n      var inputValue = target.value;\n      this.setState(_defineProperty({}, inputName, _objectSpread({\n        value: inputValue\n      }, validationFun(inputValue))));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var signupRequest = {\n        name: this.state.name.value,\n        email: this.state.email.value,\n        username: this.state.username.value,\n        password: this.state.password.value\n      };\n      signup(signupRequest).then(function (response) {\n        toast.notify(\"Thank you! You're successfully registered. Please Login to continue!\", {\n          position: \"bottom-right\"\n        });\n\n        _this2.props.history.push(\"/login\");\n      }).catch(function (error) {\n        toast.notify('Sorry! Something went wrong. Please try again!', {\n          position: \"bottom-right\"\n        });\n      });\n    }\n  }, {\n    key: \"isFormInvalid\",\n    value: function isFormInvalid() {\n      return !(this.state.name.validateStatus === 'success' && this.state.username.validateStatus === 'success' && this.state.email.validateStatus === 'success' && this.state.password.validateStatus === 'success');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container w-50 mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"mt-5 mb-5 text-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Create new account\"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        className: \"row\",\n        controlId: \"formPlaintextFullName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        name: \"name\",\n        autoComplete: \"off\",\n        placeholder: \"your full name\",\n        value: this.state.name.value,\n        type: \"text\",\n        onChange: function onChange(event) {\n          return _this3.handleInputChange(event, _this3.validateName);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), this.state.name.validateStatus && React.createElement(\"p\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.name.errorMsg))), React.createElement(Form.Group, {\n        className: \"row\",\n        controlId: \"formPlaintextUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        name: \"username\",\n        autoComplete: \"off\",\n        placeholder: \"username\",\n        value: this.state.username.value,\n        onBlur: this.validateUsernameAvailability,\n        onChange: function onChange(event) {\n          return _this3.handleInputChange(event, _this3.validateUsername);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), this.state.username.validateStatus && React.createElement(\"p\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.username.errorMsg))), React.createElement(Form.Group, {\n        className: \"row\",\n        controlId: \"formPlaintextEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        name: \"email\",\n        type: \"email\",\n        autoComplete: \"off\",\n        placeholder: \"email@example.com\",\n        value: this.state.email.value,\n        onBlur: this.validateEmailAvailability,\n        onChange: function onChange(event) {\n          return _this3.handleInputChange(event, _this3.validateEmail);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), this.state.email.validateStatus && React.createElement(\"p\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.email.errorMsg))), React.createElement(Form.Group, {\n        className: \"row\",\n        controlId: \"formPlaintextPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Form.Control, {\n        name: \"password\",\n        type: \"password\",\n        autoComplete: \"off\",\n        placeholder: \"Password\",\n        value: this.state.password.value,\n        onChange: function onChange(event) {\n          return _this3.handleInputChange(event, _this3.validatePassword);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), this.state.password.validateStatus && React.createElement(\"p\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.password.errorMsg))), React.createElement(Button, {\n        className: \"mt-4\",\n        variant: \"primary\",\n        type: \"submit\",\n        block: true,\n        disabled: this.isFormInvalid(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Sign up\"), \"Already registered? \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Login now!\")));\n    }\n  }, {\n    key: \"validateUsernameAvailability\",\n    value: function validateUsernameAvailability() {\n      var _this4 = this;\n\n      // First check for client side errors in username\n      var usernameValue = this.state.username.value;\n      var usernameValidation = this.validateUsername(usernameValue);\n\n      if (usernameValidation.validateStatus === 'error') {\n        this.setState({\n          username: _objectSpread({\n            value: usernameValue\n          }, usernameValidation)\n        });\n        return;\n      }\n\n      this.setState({\n        username: {\n          value: usernameValue,\n          validateStatus: 'validating',\n          errorMsg: null\n        }\n      });\n      checkUsernameAvailability(usernameValue).then(function (response) {\n        if (response.available) {\n          _this4.setState({\n            username: {\n              value: usernameValue,\n              validateStatus: 'success',\n              errorMsg: null\n            }\n          });\n        } else {\n          _this4.setState({\n            username: {\n              value: usernameValue,\n              validateStatus: 'error',\n              errorMsg: 'This username is already taken'\n            }\n          });\n        }\n      }).catch(function (error) {\n        // Marking validateStatus as success, Form will be recchecked at server\n        _this4.setState({\n          username: {\n            value: usernameValue,\n            validateStatus: 'success',\n            errorMsg: null\n          }\n        });\n      });\n    }\n  }, {\n    key: \"validateEmailAvailability\",\n    value: function validateEmailAvailability() {\n      var _this5 = this;\n\n      // First check for client side errors in email\n      var emailValue = this.state.email.value;\n      var emailValidation = this.validateEmail(emailValue);\n\n      if (emailValidation.validateStatus === 'error') {\n        this.setState({\n          email: _objectSpread({\n            value: emailValue\n          }, emailValidation)\n        });\n        return;\n      }\n\n      this.setState({\n        email: {\n          value: emailValue,\n          validateStatus: 'validating',\n          errorMsg: null\n        }\n      });\n      checkEmailAvailability(emailValue).then(function (response) {\n        if (response.available) {\n          _this5.setState({\n            email: {\n              value: emailValue,\n              validateStatus: 'success',\n              errorMsg: null\n            }\n          });\n        } else {\n          _this5.setState({\n            email: {\n              value: emailValue,\n              validateStatus: 'error',\n              errorMsg: 'This Email is already registered'\n            }\n          });\n        }\n      }).catch(function (error) {\n        // Marking validateStatus as success, Form will be recchecked at server\n        _this5.setState({\n          email: {\n            value: emailValue,\n            validateStatus: 'success',\n            errorMsg: null\n          }\n        });\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/tallrye/React/swe573-quizorus-web-api/frontend/src/user/Signup.js"],"names":["React","Component","signup","checkUsernameAvailability","checkEmailAvailability","Link","NAME_MIN_LENGTH","NAME_MAX_LENGTH","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","EMAIL_MAX_LENGTH","PASSWORD_MIN_LENGTH","PASSWORD_MAX_LENGTH","Form","Button","Col","toast","Signup","props","validateName","name","length","validateStatus","errorMsg","validationStatus","validateEmail","email","EMAIL_REGEX","RegExp","test","validateUsername","username","validatePassword","password","state","value","handleInputChange","bind","handleSubmit","validateUsernameAvailability","validateEmailAvailability","isFormInvalid","event","validationFun","target","inputName","inputValue","setState","preventDefault","signupRequest","then","response","notify","position","history","push","catch","error","usernameValue","usernameValidation","available","emailValue","emailValidation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { signup, checkUsernameAvailability, checkEmailAvailability } from '../util/APIUtils';\nimport { Link } from 'react-router-dom';\nimport {\n    NAME_MIN_LENGTH, NAME_MAX_LENGTH,\n    USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH,\n    EMAIL_MAX_LENGTH,\n    PASSWORD_MIN_LENGTH, PASSWORD_MAX_LENGTH\n} from '../constants';\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport toast from \"toasted-notes\";\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: {\n                value: ''\n            },\n            username: {\n                value: ''\n            },\n            email: {\n                value: ''\n            },\n            password: {\n                value: ''\n            }\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.validateUsernameAvailability = this.validateUsernameAvailability.bind(this);\n        this.validateEmailAvailability = this.validateEmailAvailability.bind(this);\n        this.isFormInvalid = this.isFormInvalid.bind(this);\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;\n        const inputValue = target.value;\n\n        this.setState({\n            [inputName]: {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const signupRequest = {\n            name: this.state.name.value,\n            email: this.state.email.value,\n            username: this.state.username.value,\n            password: this.state.password.value\n        };\n\n        signup(signupRequest)\n            .then(response => {\n                toast.notify(\"Thank you! You're successfully registered. Please Login to continue!\", { position: \"bottom-right\" });\n                this.props.history.push(\"/login\");\n            }).catch(error => {\n                toast.notify('Sorry! Something went wrong. Please try again!', { position: \"bottom-right\" });\n            });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.username.validateStatus === 'success' &&\n            this.state.email.validateStatus === 'success' &&\n            this.state.password.validateStatus === 'success'\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"container w-50 mt-3\">\n                <h4 className=\"mt-5 mb-5 text-left\">Create new account</h4>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group className=\"row\" controlId=\"formPlaintextFullName\">\n\n                        <Col sm=\"12\">\n                            <Form.Control\n                                name=\"name\"\n                                autoComplete=\"off\"\n                                placeholder=\"your full name\"\n                                value={this.state.name.value}\n                                type=\"text\"\n                                onChange={(event) => this.handleInputChange(event, this.validateName)}\n                            />\n                            {this.state.name.validateStatus && <p className=\"text-info\">{this.state.name.errorMsg}</p>}\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group className=\"row\" controlId=\"formPlaintextUsername\">\n\n                        <Col sm=\"12\">\n                            <Form.Control\n                                name=\"username\"\n                                autoComplete=\"off\"\n                                placeholder=\"username\"\n                                value={this.state.username.value}\n                                onBlur={this.validateUsernameAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateUsername)}\n                            />\n                            {this.state.username.validateStatus && <p className=\"text-info\">{this.state.username.errorMsg}</p>}\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group className=\"row\" controlId=\"formPlaintextEmail\">\n\n                        <Col sm=\"12\">\n                            <Form.Control\n                                name=\"email\"\n                                type=\"email\"\n                                autoComplete=\"off\"\n                                placeholder=\"email@example.com\"\n                                value={this.state.email.value}\n                                onBlur={this.validateEmailAvailability}\n                                onChange={(event) => this.handleInputChange(event, this.validateEmail)}\n                            />\n                            {this.state.email.validateStatus && <p className=\"text-info\">{this.state.email.errorMsg}</p>}\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group className=\"row\" controlId=\"formPlaintextPassword\">\n\n                        <Col sm=\"12\">\n                            <Form.Control\n                                name=\"password\"\n                                type=\"password\"\n                                autoComplete=\"off\"\n                                placeholder=\"Password\"\n                                value={this.state.password.value}\n                                onChange={(event) => this.handleInputChange(event, this.validatePassword)}\n                            />\n                            {this.state.password.validateStatus && <p className=\"text-info\">{this.state.password.errorMsg}</p>}\n                        </Col>\n                    </Form.Group>\n                    <Button\n                        className=\"mt-4\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        block\n                        disabled={this.isFormInvalid()}\n                    >\n                        Sign up\n                    </Button>\n                    Already registered? <Link to=\"/login\">Login now!</Link>\n                </Form>\n            </div>\n        );\n    }\n\n    validateName = (name) => {\n        if (name.length < NAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Minimum ${NAME_MIN_LENGTH} characters needed.`\n            }\n        } else if (name.length > NAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Maximum ${NAME_MAX_LENGTH} characters allowed.`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };\n        }\n    };\n\n    validateEmail = (email) => {\n        if (!email) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email may not be empty'\n            }\n        }\n\n        const EMAIL_REGEX = RegExp('[^@ ]+@[^@ ]+\\\\.[^@ ]+');\n        if (!EMAIL_REGEX.test(email)) {\n            return {\n                validateStatus: 'error',\n                errorMsg: 'Email not valid'\n            }\n        }\n\n        if (email.length > EMAIL_MAX_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Maximum ${EMAIL_MAX_LENGTH} characters allowed.`\n            }\n        }\n\n        return {\n            validateStatus: null,\n            errorMsg: null\n        }\n    };\n\n    validateUsername = (username) => {\n        if (username.length < USERNAME_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Minimum ${USERNAME_MIN_LENGTH} characters needed.`\n            }\n        } else if (username.length > USERNAME_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Maximum ${USERNAME_MAX_LENGTH} characters allowed.`\n            }\n        } else {\n            return {\n                validateStatus: null,\n                errorMsg: null\n            }\n        }\n    };\n\n    validateUsernameAvailability() {\n        // First check for client side errors in username\n        const usernameValue = this.state.username.value;\n        const usernameValidation = this.validateUsername(usernameValue);\n\n        if (usernameValidation.validateStatus === 'error') {\n            this.setState({\n                username: {\n                    value: usernameValue,\n                    ...usernameValidation\n                }\n            });\n            return;\n        }\n\n        this.setState({\n            username: {\n                value: usernameValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkUsernameAvailability(usernameValue)\n            .then(response => {\n                if (response.available) {\n                    this.setState({\n                        username: {\n                            value: usernameValue,\n                            validateStatus: 'success',\n                            errorMsg: null\n                        }\n                    });\n                } else {\n                    this.setState({\n                        username: {\n                            value: usernameValue,\n                            validateStatus: 'error',\n                            errorMsg: 'This username is already taken'\n                        }\n                    });\n                }\n            }).catch(error => {\n                // Marking validateStatus as success, Form will be recchecked at server\n                this.setState({\n                    username: {\n                        value: usernameValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            });\n    }\n\n    validateEmailAvailability() {\n        // First check for client side errors in email\n        const emailValue = this.state.email.value;\n        const emailValidation = this.validateEmail(emailValue);\n\n        if (emailValidation.validateStatus === 'error') {\n            this.setState({\n                email: {\n                    value: emailValue,\n                    ...emailValidation\n                }\n            });\n            return;\n        }\n\n        this.setState({\n            email: {\n                value: emailValue,\n                validateStatus: 'validating',\n                errorMsg: null\n            }\n        });\n\n        checkEmailAvailability(emailValue)\n            .then(response => {\n                if (response.available) {\n                    this.setState({\n                        email: {\n                            value: emailValue,\n                            validateStatus: 'success',\n                            errorMsg: null\n                        }\n                    });\n                } else {\n                    this.setState({\n                        email: {\n                            value: emailValue,\n                            validateStatus: 'error',\n                            errorMsg: 'This Email is already registered'\n                        }\n                    });\n                }\n            }).catch(error => {\n                // Marking validateStatus as success, Form will be recchecked at server\n                this.setState({\n                    email: {\n                        value: emailValue,\n                        validateStatus: 'success',\n                        errorMsg: null\n                    }\n                });\n            });\n    }\n\n    validatePassword = (password) => {\n        if (password.length < PASSWORD_MIN_LENGTH) {\n            return {\n                validateStatus: 'error',\n                errorMsg: `Minimum ${PASSWORD_MIN_LENGTH} characters needed.`\n            }\n        } else if (password.length > PASSWORD_MAX_LENGTH) {\n            return {\n                validationStatus: 'error',\n                errorMsg: `Maximum ${PASSWORD_MAX_LENGTH} characters allowed.`\n            }\n        } else {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };\n        }\n    }\n\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}