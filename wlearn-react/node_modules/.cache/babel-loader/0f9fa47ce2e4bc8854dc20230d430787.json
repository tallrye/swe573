{"ast":null,"code":"var _slicedToArray = require(\"/Users/tallrye/React/swe573-quizorus-web-api/frontend/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require('../utils/utils'),\n    fixedEncodeURIComponent = _require.fixedEncodeURIComponent,\n    replaceSpaceByUnderscores = _require.replaceSpaceByUnderscores,\n    isPlainObject = _require.isPlainObject;\n\nvar _require2 = require('./helpers'),\n    isPropertyId = _require2.isPropertyId;\n\nvar wikidataBase = 'https://www.wikidata.org/wiki/';\n\nvar languages = require('./sitelinks_languages');\n\nvar getSitelinkUrl = function getSitelinkUrl(site, title) {\n  if (isPlainObject(site)) {\n    title = site.title;\n    site = site.site;\n  }\n\n  if (!site) throw new Error('missing a site');\n  if (!title) throw new Error('missing a title');\n  var shortSiteKey = site.replace(/wiki$/, '');\n  var specialUrlBuilder = siteUrlBuilders[shortSiteKey] || siteUrlBuilders[site];\n  if (specialUrlBuilder) return specialUrlBuilder(title);\n\n  var _getSitelinkData = getSitelinkData(site),\n      lang = _getSitelinkData.lang,\n      project = _getSitelinkData.project;\n\n  title = fixedEncodeURIComponent(replaceSpaceByUnderscores(title));\n  return \"https://\".concat(lang, \".\").concat(project, \".org/wiki/\").concat(title);\n};\n\nvar wikimediaSite = function wikimediaSite(subdomain) {\n  return function (title) {\n    return \"https://\".concat(subdomain, \".wikimedia.org/wiki/\").concat(title);\n  };\n};\n\nvar siteUrlBuilders = {\n  commons: wikimediaSite('commons'),\n  mediawiki: function mediawiki(title) {\n    return \"https://www.mediawiki.org/wiki/\".concat(title);\n  },\n  meta: wikimediaSite('meta'),\n  species: wikimediaSite('species'),\n  wikidata: function wikidata(title) {\n    if (isPropertyId(title)) return \"\".concat(wikidataBase, \"Property:\").concat(title);\n    return \"\".concat(wikidataBase).concat(title);\n  }\n};\n\nvar getSitelinkData = function getSitelinkData(site) {\n  var specialProjectName = specialSites[site];\n  if (specialProjectName) return {\n    lang: 'en',\n    project: specialProjectName\n  };\n\n  var _site$split = site.split('wik'),\n      _site$split2 = _slicedToArray(_site$split, 3),\n      lang = _site$split2[0],\n      projectSuffix = _site$split2[1],\n      rest = _site$split2[2]; // Detecting cases like 'frwikiwiki' that would return [ 'fr', 'i', 'i' ]\n\n\n  if (rest != null) throw new Error(\"invalid sitelink: \".concat(site));\n\n  if (languages.indexOf(lang) === -1) {\n    throw new Error(\"sitelink lang not found: \".concat(lang));\n  }\n\n  var project = projectsBySuffix[projectSuffix];\n  if (!project) throw new Error(\"sitelink project not found: \".concat(project));\n  return {\n    lang: lang,\n    project: project\n  };\n};\n\nvar specialSites = {\n  commonswiki: 'commons',\n  mediawikiwiki: 'mediawiki',\n  metawiki: 'meta',\n  specieswiki: 'specieswiki',\n  wikidatawiki: 'wikidata'\n};\n\nvar isSitelinkKey = function isSitelinkKey(site) {\n  try {\n    // relies on getSitelinkData validation\n    getSitelinkData(site);\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\n\nvar projectsBySuffix = {\n  i: 'wikipedia',\n  isource: 'wikisource',\n  iquote: 'wikiquote',\n  tionary: 'wiktionary',\n  ibooks: 'wikibooks',\n  iversity: 'wikiversity',\n  ivoyage: 'wikivoyage',\n  inews: 'wikinews'\n};\nmodule.exports = {\n  getSitelinkUrl: getSitelinkUrl,\n  getSitelinkData: getSitelinkData,\n  isSitelinkKey: isSitelinkKey\n};","map":null,"metadata":{},"sourceType":"script"}